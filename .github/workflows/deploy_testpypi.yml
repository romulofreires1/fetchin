name: Deploy to TestPyPI

on:
  workflow_run:
    workflows: ["Quality Checks"]
    types:
      - completed

jobs:
  deploy_testpypi:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      - name: Install build and twine
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install build twine

      - name: Update version for TestPyPI
        run: |
          random_suffix=$(date +%s)
          echo "
import re

pyproject_path = 'pyproject.toml'

with open(pyproject_path, 'r') as file:
    content = file.read()

# Find the current version and add a random suffix to it
new_content = re.sub(r'(version = \")([^\"]+)(\")', r'\\1\\2-test.${random_suffix}\\3', content)

# Write the updated content back to the file
with open(pyproject_path, 'w') as file:
    file.write(new_content)

print(f'Updated version with suffix: {random_suffix}')
" > update_version.py
          python update_version.py

      - name: Build package
        run: |
          source venv/bin/activate
          python -m build

      - name: Publish to TestPyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
        run: |
          source venv/bin/activate
          twine upload --repository-url https://test.pypi.org/legacy/ dist/*
