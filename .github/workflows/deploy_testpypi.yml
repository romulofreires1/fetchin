name: Deploy to TestPyPI

on:
  workflow_run:
    workflows: ["Quality Checks"]
    types:
      - completed

jobs:
  deploy_testpypi:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install build toml twine

      - name: Update version for TestPyPI
        run: |
          random_suffix=$(date +%s)  # Use a timestamp as a suffix
          python -c "
import toml
with open('pyproject.toml', 'r+') as f:
    data = toml.load(f)
    current_version = data['project']['version']
    new_version = f'{current_version}-test.{random_suffix}'
    data['project']['version'] = new_version
    f.seek(0)
    toml.dump(data, f)
    f.truncate()
print(f'Updated version: {new_version}')
"

      - name: Build package
        run: |
          source venv/bin/activate
          python -m build

      - name: Publish to TestPyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
        run: |
          source venv/bin/activate
          twine upload --repository-url https://test.pypi.org/legacy/ dist/*
